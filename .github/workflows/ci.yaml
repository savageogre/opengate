name: CI

on:
  push:
    branches: [main, dev]
    paths:
      - '**/*.rs'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - '**/build.rs'
      - '.cargo/**'
      - '**/*.yaml'
      - '**/*.yml'
  pull_request:
    branches: [main, dev]
    paths:
      - '**/*.rs'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - '**/build.rs'
      - '.cargo/**'
      - '**/*.yaml'
      - '**/*.yml'
  # optional manual trigger
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust: [stable, beta, nightly]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          components: clippy, rustfmt

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-git-

      - name: Cache target dir
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-${{ matrix.rust }}-

      - name: Run unit tests
        run: cargo test --verbose

      - name: Run clippy (lints)
        run: cargo clippy -- -D warnings

      - name: Run fmt check
        run: cargo fmt -- --check
